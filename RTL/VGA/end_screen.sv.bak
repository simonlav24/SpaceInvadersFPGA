// HartsMatrixBitMap File 
// A two level bitmap. dosplaying harts on the screen FWbruary  2021  
// (c) Technion IIT, Department of Electrical Engineering 2021 



module	shields_mat	(	
					input	logic	clk,
					input	logic	resetN,
					input logic	[10:0] offsetX,// offset from top left  position 
					input logic	[10:0] offsetY,
					input	logic	InsideRectangle, //input that the pixel is within a bracket \
					input logic collision,
					input logic [10:0] missileX,
					input logic [10:0] missileY,
					
					input logic [10:0] topleftX,
					input logic [10:0] topleftY,
					input logic startOfFrame,
					
					output logic	drawingRequest, //output that the pixel should be dispalyed 
					output logic	[7:0] RGBout  //rgb value from the bitmap 
 ) ;
 

// Size represented as Number of X and Y bits 
localparam logic [7:0] TRANSPARENT_ENCODING = 8'hde ;// RGB value in the bitmap representing a transparent pixel 
 /*  end generated by the tool */

logic [1:0] monster_type = 2'b00;

// the screen is 640*480  or  20 * 15 squares of 32*32  bits ,  we wiil round up to 32*16 and use only the top left 20*15 pixels  
// this is the bitmap  of the maze , if there is a one  the na whole 32*32 rectange will be drawn on the screen 
// all numbers here are hard coded to simplify the  understanding 


logic [0:5] [0:108]  MazeBiMapMask;

logic [0:5] [0:108] MazeInit = 
{109'b	0011111100000000000000000000000000011111100000000000000000000000000011111100000000000000000000000000011111100,
109'b		0111111110000000000000000000000000111111110000000000000000000000000111111110000000000000000000000000111111110,
109'b		1111111111000000000000000000000001111111111000000000000000000000001111111111000000000000000000000001111111111,
109'b		1111111111000000000000000000000001111111111000000000000000000000001111111111000000000000000000000001111111111,
109'b		1110000111000000000000000000000001110000111000000000000000000000001110000111000000000000000000000001110000111,
109'b		1100000011000000000000000000000001100000011000000000000000000000001100000011000000000000000000000001100000011};

 
//==----------------------------------------------------------------------------------------------------------------=
always_ff@(posedge clk or negedge resetN)
begin
	if(!resetN) begin
		RGBout <=	8'h00;
		MazeBiMapMask <= MazeInit;
		
	end
	else begin
		RGBout <= TRANSPARENT_ENCODING ; // default 

		if (InsideRectangle == 1'b1 ) begin 
		   if (MazeBiMapMask[offsetY[10:2] ][offsetX[10:2]] == 1'b1 ) begin// if in 32 grid
				RGBout <= 8'h7c;
			end
		end
		
		if (collision == 1'b1) begin
			MazeBiMapMask[offsetY[10:2]] [offsetX[10:2]] = 1'b0;
		end
		

	end
end

//==----------------------------------------------------------------------------------------------------------------=
// decide if to draw the pixel or not 
assign drawingRequest = (RGBout != TRANSPARENT_ENCODING ) ? 1'b1 : 1'b0 ; // get optional transparent command from the bitmpap  
endmodule

